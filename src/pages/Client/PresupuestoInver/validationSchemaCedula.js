// src/pages/Client/PresupuestoInver/validationSchemaCedula.js

import * as Yup from 'yup';

export const validationSchema = Yup.object({
  nombreDependencia: Yup.string().required('El nombre de la dependencia u organismo es obligatorio'),
  areaAdscripcion: Yup.string().required('El área de adscripción es obligatoria'),
  nombreRegistrante: Yup.string().required('El nombre es obligatorio'),
  apellidoPaterno: Yup.string().required('El apellido paterno es obligatorio'),
  apellidoMaterno: Yup.string().required('El apellido materno es obligatorio'),
  correo: Yup.string().email('Correo inválido').required('El correo es obligatorio'),
  telefono: Yup.string().matches(/^[0-9]{10}$/, 'Debe ser un número de 10 dígitos').required('El teléfono es obligatorio'),
  extension: Yup.string().matches(/^[0-9]*$/, 'Solo se permiten números'),
  fechaActual: Yup.string().required('La fecha de registro es obligatoria'),
  ejercicioFiscal: Yup.string().required('El ejercicio fiscal es obligatorio'),
  dependencia: Yup.string().required('La dependencia es obligatoria'),
  organismo: Yup.string().required('El organismo es obligatorio'),
  unidadResponsable: Yup.string().required('La unidad responsable es obligatoria'),
  unidadPresupuestal: Yup.string().required('La unidad presupuestal es obligatoria'),
  nombreProyecto: Yup.string().max(250, 'Máximo 250 caracteres').required('El nombre del proyecto es obligatorio'),
  descripcionProyecto: Yup.string().max(1000, 'Máximo 1000 caracteres').required('La descripción del proyecto es obligatoria'),
  situacionActual: Yup.string().max(1000, 'Máximo 1000 caracteres').required('El análisis de la situación actual es obligatorio'),
  tipoObra: Yup.string().required('El tipo de obra es obligatorio'),
  calendarioEjecucion: Yup.string().required('El calendario de ejecución es obligatorio'),
  beneficioSocial: Yup.string().max(500, 'Máximo 500 caracteres').required('El beneficio social es obligatorio'),
  beneficioEconomico: Yup.string().max(500, 'Máximo 500 caracteres').required('El beneficio económico es obligatorio'),
  numeroBeneficiarios: Yup.number().integer('Debe ser un número entero').required('El número de beneficiarios es obligatorio'),
  inversionPresupuestada: Yup.number().positive('Debe ser un número positivo').required('La inversión presupuestada es obligatoria'),
  ods: Yup.string().required('El objetivo de desarrollo sostenible es obligatorio'),
  planEstatal: Yup.string().required('El plan estatal de desarrollo es obligatorio'),
  objetivoPED: Yup.string().required('El objetivo del PED es obligatorio'),
  estrategiaPED: Yup.string().required('La estrategia del PED es obligatoria'),
  lineaAccionPED: Yup.string().required('La línea de acción del PED es obligatoria'),
  indicadorPED: Yup.string().required('El indicador estratégico del PED es obligatorio'),
  prioridad: Yup.number().integer('Debe ser un número entero').min(1, 'Mínimo 1').max(100, 'Máximo 100').required('La prioridad es obligatoria'),
  propuestaCampana: Yup.string().required('Este campo es obligatorio'),
  cualPropuesta: Yup.string().when('propuestaCampana', {
    is: 'Sí',
    then: (schema) => schema.required('Debes especificar la propuesta de campaña'),
    otherwise: (schema) => schema.oneOf(['No aplica'], 'Debe seleccionar "No aplica" cuando la respuesta es "No"'),
  }),
  expedienteTecnico: Yup.string().required('Este campo es obligatorio'),
});
